"""
This type stub file was generated by pyright.
"""

from docx.shared import ElementProxy

"""Styles object, container for all"""
class Styles(ElementProxy):
    """Provides access to the styles de"""
    __slots__ = ...
    def __contains__(self, name): # -> bool:
        """
        Enables `in` operator o"""
        ...
    
    def __getitem__(self, key): # -> _ParagraphStyle | _CharacterStyle | _TableStyle | _NumberingStyle:
        """
        Enables dictionary-styl"""
        ...
    
    def __iter__(self): # -> Generator[_ParagraphStyle | _CharacterStyle | _TableStyle | _NumberingStyle, None, None]:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def add_style(self, name, style_type, builtin=...): # -> _ParagraphStyle | _CharacterStyle | _TableStyle | _NumberingStyle:
        """
        Return a newly added st"""
        ...
    
    def default(self, style_type): # -> _ParagraphStyle | _CharacterStyle | _TableStyle | _NumberingStyle | None:
        """
        Return the default styl"""
        ...
    
    def get_by_id(self, style_id, style_type): # -> _ParagraphStyle | _CharacterStyle | _TableStyle | _NumberingStyle | None:
        """Return the style of *style_type*"""
        ...
    
    def get_style_id(self, style_or_name, style_type): # -> None:
        """
        Return the id of the st"""
        ...
    
    @property
    def latent_styles(self): # -> LatentStyles:
        """
        A |LatentStyles| object"""
        ...
    


