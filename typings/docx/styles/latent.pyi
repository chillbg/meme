"""
This type stub file was generated by pyright.
"""

from ..shared import ElementProxy

"""
Latent style-related objects.
"""
class LatentStyles(ElementProxy):
    """
    Provides access to the defa"""
    __slots__ = ...
    def __getitem__(self, key): # -> _LatentStyle:
        """
        Enables dictionary-styl"""
        ...
    
    def __iter__(self): # -> Generator[_LatentStyle, None, None]:
        ...
    
    def __len__(self): # -> int:
        ...
    
    def add_latent_style(self, name): # -> _LatentStyle:
        """
        Return a newly added |_"""
        ...
    
    @property
    def default_priority(self):
        """
        Integer between 0 and 9"""
        ...
    
    @default_priority.setter
    def default_priority(self, value): # -> None:
        ...
    
    @property
    def default_to_hidden(self):
        """
        Boolean specifying whet"""
        ...
    
    @default_to_hidden.setter
    def default_to_hidden(self, value): # -> None:
        ...
    
    @property
    def default_to_locked(self):
        """
        Boolean specifying whet"""
        ...
    
    @default_to_locked.setter
    def default_to_locked(self, value): # -> None:
        ...
    
    @property
    def default_to_quick_style(self):
        """
        Boolean specifying whet"""
        ...
    
    @default_to_quick_style.setter
    def default_to_quick_style(self, value): # -> None:
        ...
    
    @property
    def default_to_unhide_when_used(self):
        """
        Boolean specifying whet"""
        ...
    
    @default_to_unhide_when_used.setter
    def default_to_unhide_when_used(self, value): # -> None:
        ...
    
    @property
    def load_count(self):
        """
        Integer specifying the """
        ...
    
    @load_count.setter
    def load_count(self, value): # -> None:
        ...
    


class _LatentStyle(ElementProxy):
    """
    Proxy for an `w:lsdExceptio"""
    __slots__ = ...
    def delete(self): # -> None:
        """
        Remove this latent styl"""
        ...
    
    @property
    def hidden(self):
        """
        Tri-state value specify"""
        ...
    
    @hidden.setter
    def hidden(self, value): # -> None:
        ...
    
    @property
    def locked(self):
        """
        Tri-state value specify"""
        ...
    
    @locked.setter
    def locked(self, value): # -> None:
        ...
    
    @property
    def name(self): # -> Literal['Caption', 'Footer', 'Header', 'Heading 1', 'Heading 2', 'Heading 3', 'Heading 4', 'Heading 5', 'Heading 6', 'Heading 7', 'Heading 8', 'Heading 9']:
        """
        The name of the built-i"""
        ...
    
    @property
    def priority(self):
        """
        The integer sort key fo"""
        ...
    
    @priority.setter
    def priority(self, value): # -> None:
        ...
    
    @property
    def quick_style(self):
        """
        Tri-state value specify"""
        ...
    
    @quick_style.setter
    def quick_style(self, value): # -> None:
        ...
    
    @property
    def unhide_when_used(self):
        """
        Tri-state value specify"""
        ...
    
    @unhide_when_used.setter
    def unhide_when_used(self, value): # -> None:
        ...
    


