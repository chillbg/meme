"""
This type stub file was generated by pyright.
"""

from ..shared import ElementProxy

"""
Font-related proxy objects.
"""
class Font(ElementProxy):
    """
    Proxy object wrapping the p"""
    __slots__ = ...
    @property
    def all_caps(self): # -> None:
        """
        Read/write. Causes text"""
        ...
    
    @all_caps.setter
    def all_caps(self, value): # -> None:
        ...
    
    @property
    def bold(self): # -> None:
        """
        Read/write. Causes text"""
        ...
    
    @bold.setter
    def bold(self, value): # -> None:
        ...
    
    @property
    def color(self): # -> ColorFormat:
        """
        A |ColorFormat| object """
        ...
    
    @property
    def complex_script(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @complex_script.setter
    def complex_script(self, value): # -> None:
        ...
    
    @property
    def cs_bold(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @cs_bold.setter
    def cs_bold(self, value): # -> None:
        ...
    
    @property
    def cs_italic(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @cs_italic.setter
    def cs_italic(self, value): # -> None:
        ...
    
    @property
    def double_strike(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @double_strike.setter
    def double_strike(self, value): # -> None:
        ...
    
    @property
    def emboss(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @emboss.setter
    def emboss(self, value): # -> None:
        ...
    
    @property
    def hidden(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @hidden.setter
    def hidden(self, value): # -> None:
        ...
    
    @property
    def highlight_color(self): # -> None:
        """
        A member of :ref:`WdCol"""
        ...
    
    @highlight_color.setter
    def highlight_color(self, value): # -> None:
        ...
    
    @property
    def italic(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @italic.setter
    def italic(self, value): # -> None:
        ...
    
    @property
    def imprint(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @imprint.setter
    def imprint(self, value): # -> None:
        ...
    
    @property
    def math(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @math.setter
    def math(self, value): # -> None:
        ...
    
    @property
    def name(self): # -> None:
        """
        Get or set the typeface"""
        ...
    
    @name.setter
    def name(self, value): # -> None:
        ...
    
    @property
    def no_proof(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @no_proof.setter
    def no_proof(self, value): # -> None:
        ...
    
    @property
    def outline(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @outline.setter
    def outline(self, value): # -> None:
        ...
    
    @property
    def rtl(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @rtl.setter
    def rtl(self, value): # -> None:
        ...
    
    @property
    def shadow(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @shadow.setter
    def shadow(self, value): # -> None:
        ...
    
    @property
    def size(self): # -> None:
        """
        Read/write |Length| val"""
        ...
    
    @size.setter
    def size(self, emu): # -> None:
        ...
    
    @property
    def small_caps(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @small_caps.setter
    def small_caps(self, value): # -> None:
        ...
    
    @property
    def snap_to_grid(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @snap_to_grid.setter
    def snap_to_grid(self, value): # -> None:
        ...
    
    @property
    def spec_vanish(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @spec_vanish.setter
    def spec_vanish(self, value): # -> None:
        ...
    
    @property
    def strike(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @strike.setter
    def strike(self, value): # -> None:
        ...
    
    @property
    def subscript(self): # -> None:
        """
        Boolean indicating whet"""
        ...
    
    @subscript.setter
    def subscript(self, value): # -> None:
        ...
    
    @property
    def superscript(self): # -> None:
        """
        Boolean indicating whet"""
        ...
    
    @superscript.setter
    def superscript(self, value): # -> None:
        ...
    
    @property
    def underline(self): # -> None:
        """
        The underline style for"""
        ...
    
    @underline.setter
    def underline(self, value): # -> None:
        ...
    
    @property
    def web_hidden(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @web_hidden.setter
    def web_hidden(self, value): # -> None:
        ...
    


