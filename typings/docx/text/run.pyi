"""
This type stub file was generated by pyright.
"""

from ..shared import Parented

"""
Run-related proxy objects for p"""
class Run(Parented):
    """
    Proxy object wrapping ``<w:"""
    def __init__(self, r, parent) -> None:
        ...
    
    def add_break(self, break_type=...): # -> None:
        """
        Add a break element of """
        ...
    
    def add_picture(self, image_path_or_stream, width=..., height=...): # -> InlineShape:
        """
        Return an |InlineShape|"""
        ...
    
    def add_tab(self): # -> None:
        """
        Add a ``<w:tab/>`` elem"""
        ...
    
    def add_text(self, text): # -> _Text:
        """
        Returns a newly appende"""
        ...
    
    @property
    def bold(self): # -> None:
        """
        Read/write. Causes the """
        ...
    
    @bold.setter
    def bold(self, value): # -> None:
        ...
    
    def clear(self): # -> Self@Run:
        """
        Return reference to thi"""
        ...
    
    @property
    def font(self): # -> Font:
        """
        The |Font| object provi"""
        ...
    
    @property
    def italic(self): # -> None:
        """
        Read/write tri-state va"""
        ...
    
    @italic.setter
    def italic(self, value): # -> None:
        ...
    
    @property
    def style(self):
        """
        Read/write. A |_Charact"""
        ...
    
    @style.setter
    def style(self, style_or_name): # -> None:
        ...
    
    @property
    def text(self):
        """
        String formed by concat"""
        ...
    
    @text.setter
    def text(self, text): # -> None:
        ...
    
    @property
    def underline(self): # -> None:
        """
        The underline style for"""
        ...
    
    @underline.setter
    def underline(self, value): # -> None:
        ...
    


class _Text:
    """
    Proxy object wrapping ``<w:"""
    def __init__(self, t_elm) -> None:
        ...
    


