"""
This type stub file was generated by pyright.
"""

"""
Provides a low-level, read-only"""
class PackageReader:
    """
    Provides access to the cont"""
    def __init__(self, content_types, pkg_srels, sparts) -> None:
        ...
    
    @staticmethod
    def from_file(pkg_file): # -> PackageReader:
        """
        Return a |PackageReader"""
        ...
    
    def iter_sparts(self): # -> Generator[tuple[Unknown, Unknown, Unknown, Unknown], None, None]:
        """
        Generate a 4-tuple `(pa"""
        ...
    
    def iter_srels(self): # -> Generator[tuple[PackURI, Unknown] | tuple[Unknown, Unknown], None, None]:
        """
        Generate a 2-tuple `(so"""
        ...
    


class _ContentTypeMap:
    """
    Value type providing dictio"""
    def __init__(self) -> None:
        ...
    
    def __getitem__(self, partname):
        """
        Return content type for"""
        ...
    
    @staticmethod
    def from_xml(content_types_xml): # -> _ContentTypeMap:
        """
        Return a new |_ContentT"""
        ...
    


class _SerializedPart:
    """
    Value object for an OPC pac"""
    def __init__(self, partname, content_type, reltype, blob, srels) -> None:
        ...
    
    @property
    def partname(self):
        ...
    
    @property
    def content_type(self):
        ...
    
    @property
    def blob(self):
        ...
    
    @property
    def reltype(self):
        """
        The referring relations"""
        ...
    
    @property
    def srels(self):
        ...
    


class _SerializedRelationship:
    """
    Value object representing a"""
    def __init__(self, baseURI, rel_elm) -> None:
        ...
    
    @property
    def is_external(self):
        """
        True if target_mode is """
        ...
    
    @property
    def reltype(self):
        """Relationship type, like ``RT.OFF"""
        ...
    
    @property
    def rId(self):
        """
        Relationship id, like '"""
        ...
    
    @property
    def target_mode(self):
        """
        String in ``TargetMode`"""
        ...
    
    @property
    def target_ref(self):
        """
        String in ``Target`` at"""
        ...
    
    @property
    def target_partname(self): # -> PackURI:
        """
        |PackURI| instance cont"""
        ...
    


class _SerializedRelationships:
    """
    Read-only sequence of |_Ser"""
    def __init__(self) -> None:
        ...
    
    def __iter__(self): # -> Iterator[Unknown]:
        """Support iteration, e.g. 'for x i"""
        ...
    
    @staticmethod
    def load_from_xml(baseURI, rels_item_xml): # -> _SerializedRelationships:
        """
        Return |_SerializedRela"""
        ...
    


