"""
This type stub file was generated by pyright.
"""

from ..xmlchemy import BaseOxmlElement

"""
Custom element classes related """
class CT_Ind(BaseOxmlElement):
    """
    ``<w:ind>`` element, specif"""
    left = ...
    right = ...
    firstLine = ...
    hanging = ...


class CT_Jc(BaseOxmlElement):
    """
    ``<w:jc>`` element, specify"""
    val = ...


class CT_PPr(BaseOxmlElement):
    """
    ``<w:pPr>`` element, contai"""
    _tag_seq = ...
    pStyle = ...
    keepNext = ...
    keepLines = ...
    pageBreakBefore = ...
    widowControl = ...
    numPr = ...
    tabs = ...
    spacing = ...
    ind = ...
    jc = ...
    sectPr = ...
    @property
    def first_line_indent(self): # -> Length | None:
        """
        A |Length| value calcul"""
        ...
    
    @first_line_indent.setter
    def first_line_indent(self, value): # -> None:
        ...
    
    @property
    def ind_left(self): # -> None:
        """
        The value of `w:ind/@w:"""
        ...
    
    @ind_left.setter
    def ind_left(self, value): # -> None:
        ...
    
    @property
    def ind_right(self): # -> None:
        """
        The value of `w:ind/@w:"""
        ...
    
    @ind_right.setter
    def ind_right(self, value): # -> None:
        ...
    
    @property
    def jc_val(self): # -> None:
        """
        The value of the ``<w:j"""
        ...
    
    @jc_val.setter
    def jc_val(self, value): # -> None:
        ...
    
    @property
    def keepLines_val(self): # -> None:
        """
        The value of `keepLines"""
        ...
    
    @keepLines_val.setter
    def keepLines_val(self, value): # -> None:
        ...
    
    @property
    def keepNext_val(self): # -> None:
        """
        The value of `keepNext/"""
        ...
    
    @keepNext_val.setter
    def keepNext_val(self, value): # -> None:
        ...
    
    @property
    def pageBreakBefore_val(self): # -> None:
        """
        The value of `pageBreak"""
        ...
    
    @pageBreakBefore_val.setter
    def pageBreakBefore_val(self, value): # -> None:
        ...
    
    @property
    def spacing_after(self): # -> None:
        """
        The value of `w:spacing"""
        ...
    
    @spacing_after.setter
    def spacing_after(self, value): # -> None:
        ...
    
    @property
    def spacing_before(self): # -> None:
        """
        The value of `w:spacing"""
        ...
    
    @spacing_before.setter
    def spacing_before(self, value): # -> None:
        ...
    
    @property
    def spacing_line(self): # -> None:
        """
        The value of `w:spacing"""
        ...
    
    @spacing_line.setter
    def spacing_line(self, value): # -> None:
        ...
    
    @property
    def spacing_lineRule(self): # -> None:
        """
        The value of `w:spacing"""
        ...
    
    @spacing_lineRule.setter
    def spacing_lineRule(self, value): # -> None:
        ...
    
    @property
    def style(self): # -> None:
        """
        String contained in <w:"""
        ...
    
    @style.setter
    def style(self, style): # -> None:
        """
        Set val attribute of <w"""
        ...
    
    @property
    def widowControl_val(self): # -> None:
        """
        The value of `widowCont"""
        ...
    
    @widowControl_val.setter
    def widowControl_val(self, value): # -> None:
        ...
    


class CT_Spacing(BaseOxmlElement):
    """
    ``<w:spacing>`` element, sp"""
    after = ...
    before = ...
    line = ...
    lineRule = ...


class CT_TabStop(BaseOxmlElement):
    """
    ``<w:tab>`` element, repres"""
    val = ...
    leader = ...
    pos = ...


class CT_TabStops(BaseOxmlElement):
    """
    ``<w:tabs>`` element, conta"""
    tab = ...
    def insert_tab_in_order(self, pos, align, leader):
        """
        Insert a newly created """
        ...
    


