"""
This type stub file was generated by pyright.
"""

from ..xmlchemy import BaseOxmlElement

"""
Custom element classes related """
class CT_Br(BaseOxmlElement):
    """
    ``<w:br>`` element, indicat"""
    type = ...
    clear = ...


class CT_R(BaseOxmlElement):
    """
    ``<w:r>`` element, containi"""
    rPr = ...
    t = ...
    br = ...
    cr = ...
    tab = ...
    drawing = ...
    def add_t(self, text):
        """
        Return a newly added ``"""
        ...
    
    def add_drawing(self, inline_or_anchor):
        """
        Return a newly appended"""
        ...
    
    def clear_content(self): # -> None:
        """
        Remove all child elemen"""
        ...
    
    @property
    def style(self): # -> None:
        """
        String contained in w:v"""
        ...
    
    @style.setter
    def style(self, style): # -> None:
        """
        Set the character style"""
        ...
    
    @property
    def text(self): # -> str:
        """
        A string representing t"""
        ...
    
    @text.setter
    def text(self, text): # -> None:
        ...
    


class CT_Text(BaseOxmlElement):
    """
    ``<w:t>`` element, containi"""
    ...


class _RunContentAppender:
    """
    Service object that knows h"""
    def __init__(self, r) -> None:
        ...
    
    @classmethod
    def append_to_run_from_text(cls, r, text): # -> None:
        """
        Create a "one-shot" ``_"""
        ...
    
    def add_text(self, text): # -> None:
        """
        Append the run content """
        ...
    
    def add_char(self, char): # -> None:
        """
        Process the next charac"""
        ...
    
    def flush(self): # -> None:
        ...
    


