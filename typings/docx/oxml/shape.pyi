"""
This type stub file was generated by pyright.
"""

from .xmlchemy import BaseOxmlElement

"""
Custom element classes for shap"""
class CT_Blip(BaseOxmlElement):
    """
    ``<a:blip>`` element, speci"""
    embed = ...
    link = ...


class CT_BlipFillProperties(BaseOxmlElement):
    """
    ``<pic:blipFill>`` element,"""
    blip = ...


class CT_GraphicalObject(BaseOxmlElement):
    """
    ``<a:graphic>`` element, co"""
    graphicData = ...


class CT_GraphicalObjectData(BaseOxmlElement):
    """
    ``<a:graphicData>`` element"""
    pic = ...
    uri = ...


class CT_Inline(BaseOxmlElement):
    """
    ``<w:inline>`` element, con"""
    extent = ...
    docPr = ...
    graphic = ...
    @classmethod
    def new(cls, cx, cy, shape_id, pic): # -> Any:
        """
        Return a new ``<wp:inli"""
        ...
    
    @classmethod
    def new_pic_inline(cls, shape_id, rId, filename, cx, cy): # -> Any:
        """
        Return a new `wp:inline"""
        ...
    


class CT_NonVisualDrawingProps(BaseOxmlElement):
    """
    Used for ``<wp:docPr>`` ele"""
    id = ...
    name = ...


class CT_NonVisualPictureProperties(BaseOxmlElement):
    """
    ``<pic:cNvPicPr>`` element,"""
    ...


class CT_Picture(BaseOxmlElement):
    """
    ``<pic:pic>`` element, a Dr"""
    nvPicPr = ...
    blipFill = ...
    spPr = ...
    @classmethod
    def new(cls, pic_id, filename, rId, cx, cy): # -> Any:
        """
        Return a new ``<pic:pic"""
        ...
    


class CT_PictureNonVisual(BaseOxmlElement):
    """
    ``<pic:nvPicPr>`` element, """
    cNvPr = ...


class CT_Point2D(BaseOxmlElement):
    """
    Used for ``<a:off>`` elemen"""
    x = ...
    y = ...


class CT_PositiveSize2D(BaseOxmlElement):
    """
    Used for ``<wp:extent>`` el"""
    cx = ...
    cy = ...


class CT_PresetGeometry2D(BaseOxmlElement):
    """
    ``<a:prstGeom>`` element, s"""
    ...


class CT_RelativeRect(BaseOxmlElement):
    """
    ``<a:fillRect>`` element, s"""
    ...


class CT_ShapeProperties(BaseOxmlElement):
    """
    ``<pic:spPr>`` element, spe"""
    xfrm = ...
    @property
    def cx(self): # -> None:
        """
        Shape width as an insta"""
        ...
    
    @cx.setter
    def cx(self, value): # -> None:
        ...
    
    @property
    def cy(self): # -> None:
        """
        Shape height as an inst"""
        ...
    
    @cy.setter
    def cy(self, value): # -> None:
        ...
    


class CT_StretchInfoProperties(BaseOxmlElement):
    """
    ``<a:stretch>`` element, sp"""
    ...


class CT_Transform2D(BaseOxmlElement):
    """
    ``<a:xfrm>`` element, speci"""
    off = ...
    ext = ...
    @property
    def cx(self): # -> None:
        ...
    
    @cx.setter
    def cx(self, value): # -> None:
        ...
    
    @property
    def cy(self): # -> None:
        ...
    
    @cy.setter
    def cy(self, value): # -> None:
        ...
    


